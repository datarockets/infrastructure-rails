---
- name: Create deploy dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }} state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Create releases dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }}/releases state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Create repo dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }}/repo state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Create shared dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }}/shared state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Create shared/config dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }}/shared/config state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Create shared/log dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }}/shared/log state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Create shared/public dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }}/shared/public state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Create shared/tmp dir
  file: path={{ deploy_dir }}{{ deploy_app_dir }}/shared/tmp state=directory owner={{ deploy_user }} group={{ deploy_user }}

- name: Copy .env
  template: src=.env dest={{ deploy_dir }}{{ deploy_app_dir }}/shared/.env owner={{ deploy_user }} group={{ deploy_user }}
  when: rails_use_dot_env is defined and rails_use_dot_env == true

- name: Copy secrets.yml
  template: src=secrets.yml dest={{ deploy_dir }}{{ deploy_app_dir }}/shared/config/secrets.yml owner={{ deploy_user }} group={{ deploy_user }}
  when: rails_use_dot_env is defined and rails_use_dot_env == false

- name: Copy database.yml
  template: src=database.yml dest={{ deploy_dir }}{{ deploy_app_dir }}/shared/config/database.yml owner={{ deploy_user }} group={{ deploy_user }}
  when: rails_use_dot_env is defined and rails_use_dot_env == false

- name: Copy puma.rb
  template: src=puma.rb dest={{ deploy_dir }}{{ deploy_app_dir }}/shared/puma.rb owner={{ deploy_user }} group={{ deploy_user }}

- name: Restart Nginx
  service: name=nginx state=restarted enabled=yes

- name: Ensure Nginx is running
  service: name=nginx state=started enabled=yes
