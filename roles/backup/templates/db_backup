# encoding: utf-8

backup_type = ENV["BACKUP_TYPE"] || "manual"

Model.new(:db_backup, 'Backups for {{ postgres_db_name }}') do
  database PostgreSQL do |db|
    db.name               = "{{ postgres_db_name }}"
    db.username           = "{{ postgres_db_username }}"
    db.password           = "{{ postgres_db_password }}"
    db.host               = "localhost"
  end

  compress_with Bzip2

  encrypt_with OpenSSL do |encryption|
    encryption.password = "{{ backup_encrypt_password }}"
    encryption.base64 = false
    encryption.salt = true
  end
  # To decrypt your backup, use the following command:
  # $ openssl aes-256-cbc -d -in {{ postgres_db_name }}.tar.enc -out {{ postgres_db_name }}.tar

  {% if backup_store is defined and backup_store == 'scp' %}
  store_with SCP do |server|
    server.username   = "{{ backup_scp_username }}"
    server.password   = "{{ backup_scp_password }}"
    server.ip         = "{{ backup_scp_ip }}"
    server.port       = {{ backup_scp_port }}
    server.path       = "{{ backup_scp_path }}#{backup_type}/"
  end

  {% endif %}


  {% if backup_store is defined and backup_store == 's3' %}
  store_with S3 do |s3|
    s3.access_key_id     = "{{ backup_s3_access_key_id }}"
    s3.secret_access_key = "{{ backup_s3_secret_access_key }}"
    s3.region            = "{{ backup_s3_bucket }}"
    s3.bucket            = "{{ backup_s3_region }}"
    s3.path              = backup_type
  end

  {% endif %}

  store_with Local, backup_type do |local|
    local.path = "~/backups/#{backup_type}"

    # keep only 16 last backups on this server in order not to overuse storage
    # more backups on s3
    local.keep = 16
  end

  {% if backup_daily_webhook_url is defined %}
  if ["daily", "weekly"].include?(backup_type)
    notify_by Slack do |slack|
      slack.on_success = true
      slack.on_warning = true
      slack.on_failure = true
      slack.webhook_url = "{{ backup_daily_webhook_url }}"
    end
  end
  {% endif %}

  {% if backup_hourly_webhook_url is defined %}
  if ["hourly", "manual"].include?(backup_type)
    notify_by Slack do |slack|
      slack.on_success = false
      slack.on_warning = false
      slack.on_failure = true
      slack.webhook_url = "{{ backup_hourly_webhook_url }}"
    end
  end
  {% endif %}
end
